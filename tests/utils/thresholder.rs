
////////////////////////////////////////////////////////////////////////////////////////////////////

// standard libraries
use std::collections::{HashMap};

////////////////////////////////////////////////////////////////////////////////////////////////////

// crate utilities
use chapulin::settings::constants::NO_FDR;
use chapulin::utils::thresholder::{thresholder};

////////////////////////////////////////////////////////////////////////////////////////////////////


#[test]
fn test_thresholder() {
  let mut hm = HashMap::new();
  hm.insert(1, vec!["uno".to_string(), "dos".to_string(), "tres".to_string(),]);

  assert_eq!(
    thresholder(
      0.,
      1000.,
      0.001,
      &hm,
      NO_FDR,
    ),
    3,
  );
}

////////////////////////////////////////////////////////////////////////////////////////////////////
